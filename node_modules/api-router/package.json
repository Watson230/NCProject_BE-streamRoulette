{
  "_args": [
    [
      {
        "raw": "api-router",
        "scope": null,
        "escapedName": "api-router",
        "name": "api-router",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/dave/NC/BE-stream_roulette"
    ]
  ],
  "_from": "api-router@latest",
  "_id": "api-router@0.1.10",
  "_inCache": true,
  "_location": "/api-router",
  "_npmUser": {
    "name": "prashanfdo",
    "email": "prashanfdo@gmail.com"
  },
  "_npmVersion": "1.4.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "api-router",
    "scope": null,
    "escapedName": "api-router",
    "name": "api-router",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/api-router/-/api-router-0.1.10.tgz",
  "_shasum": "bf1f62593b126dcf2e2a9dbc860dbd8aeea9d8d9",
  "_shrinkwrap": null,
  "_spec": "api-router",
  "_where": "/Users/dave/NC/BE-stream_roulette",
  "author": {
    "name": "Prashan Fernando",
    "email": "prashanfdo@gmail.com",
    "url": "https://github.com/Prashanfdo"
  },
  "bugs": {
    "url": "https://github.com/prashanfdo/api-router/issues"
  },
  "dependencies": {
    "bliss": "^1.0.1",
    "body-parser": "^1.6.7",
    "change-case": "^2.1.1",
    "color": "^0.7.3",
    "colors": "^1.0.3",
    "cookie-parser": "^1.3.2",
    "deep-extend": "^0.2.11",
    "lodash": "^2.4.1",
    "mongoose": "^3.8.15",
    "passport": "^0.2.0",
    "uglify-js": "^2.4.15",
    "underscore": "^1.6.0",
    "vash": "^0.7.12-1"
  },
  "description": "Beefup your routes in minutes",
  "devDependencies": {
    "assert": "^1.1.1",
    "browserify": "^4.1.3",
    "express": "^4.7.2",
    "grunt-concurrent": "^0.5.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-nodeunit": "^0.3.3",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-debug": "0.0.3",
    "grunt-mocha-debug": "0.0.10",
    "grunt-node-inspector": "^0.1.5",
    "grunt-nodemon": "^0.3.0",
    "grunt-simple-mocha": "^0.4.0",
    "jshint-stylish": "^0.2.0",
    "load-grunt-tasks": "^0.4.0",
    "mocha": "^1.21.4",
    "open": "0.0.5",
    "should": "^4.0.4",
    "supertest": "^0.13.0",
    "supertest-session": "0.0.2",
    "testosterone": "^1.3.1",
    "time-grunt": "^0.3.1",
    "underscore": "^1.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "bf1f62593b126dcf2e2a9dbc860dbd8aeea9d8d9",
    "tarball": "https://registry.npmjs.org/api-router/-/api-router-0.1.10.tgz"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/Prashanfdo/api-router",
  "keywords": [
    "api-router",
    "api",
    "router",
    "express"
  ],
  "license": "MIT",
  "main": "lib/api-router.js",
  "maintainers": [
    {
      "name": "prashanfdo",
      "email": "prashanfdo@gmail.com"
    }
  ],
  "name": "api-router",
  "optionalDependencies": {},
  "preferGlobal": "true",
  "readme": "# api-router [![Build Status](https://travis-ci.org/Prashanfdo/api-router.svg)](http://travis-ci.org/prashanfdo/api-router)\r\n\r\n> Beefup your routes in minutes.\r\n\r\n\r\n## Getting Started\r\n\r\nInstall the module with: `npm install api-router`\r\n\r\n```js\r\nvar api-router = require('api-router');\r\n```\r\n  \r\n## Usage\r\n\r\n```js\r\nvar express = require('express');\r\nvar api-router = require('api-router');\r\n\r\napp = express();\r\n\r\napiRouter(app,{\r\n                url: 'api',\r\n                authResolver: function(req, res) {\r\n                    return true;\r\n                },\r\n                authorizationResolver: function(roles,req, res) {\r\n                    return true;\r\n                },\r\n                // GET /api\r\n                get: function(req,res){\r\n                  res.send({\r\n                      hello: 'world'\r\n                  });\r\n                },\r\n                //  POST /api\r\n                post:  function(req,res){\r\n                  res.send({\r\n                      hello: 'post-er'\r\n                  });\r\n                },\r\n                // write your get,post methods with methods. This method will be routed to -> GET /api/meta\r\n                getMeta: {\r\n                    anonymous: true, //-> allow anonymous access\r\n                    method: function(req,res){\r\n                        res.send({hello: 'anonymous'});\r\n                    }\r\n                },\r\n                //-> POST /api/meta\r\n                postMeta: return200,\r\n                //child routes\r\n                routes: [{\r\n                    url: 'user',\r\n                    //-> GET /api/user\r\n                    get: function(req,res){\r\n                      res.send({\r\n                          hello: 'world'\r\n                      });\r\n                    },\r\n                    //-> POST /api/user\r\n                    postUser: function(req,res){\r\n                      res.send({\r\n                          hello: 'world'\r\n                      });\r\n                    },\r\n                    routes: [{\r\n                        url: 'admin',\r\n                        //-> POST /api/user/admin\r\n                        postCreate: function(req,res){\r\n                          res.send({\r\n                              hello: 'world'\r\n                          });\r\n                        }\r\n                    }]\r\n                }]\r\n            });\r\n            server = app.listen(3000);\r\n            done();\r\n```\r\n## Featrures\r\n\r\n### Mongoose model bind\r\nBind a Mongoose model directly.\r\n```js\r\nvar BlogPostModel = mongoose.model('BlogPost');\r\nvar ops = {\r\n                authResolver: function(req, res, next) {\r\n                    return true;\r\n                },\r\n                authorizationResolver: function(req, res, next) {\r\n                    return true;\r\n                },\r\n                url: 'api',\r\n                model:BlogPostModel, // or just pass the model name 'BlogPost'\r\n            };\r\napiRouter(app, ops);\r\n```\r\n\r\n## Contributing\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com).\r\n\r\n\r\n## License\r\n\r\nCopyright (c) 2014 Prashan Fernando  \r\nLicensed under the MIT license.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/prashanfdo/api-router.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "0.1.10"
}
